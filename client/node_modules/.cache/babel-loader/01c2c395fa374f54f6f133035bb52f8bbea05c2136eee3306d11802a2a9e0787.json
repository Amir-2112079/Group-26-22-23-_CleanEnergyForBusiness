{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\CleanEnergyForBusiness\\\\cleanenergyforbusiness\\\\client\\\\src\\\\Components\\\\Pages\\\\Login2.js\",\n  _s = $RefreshSig$();\nimport \"../CSSContents/newLog.css\";\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login2() {\n  _s();\n  //Saving the values in the form variable\n  const [form, setForm] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  //mode determines whether the form should disply login or register\n  const [mode, setMode] = useState('login');\n  //const [errors, setErros] = useState({});\n  //message is used to disply any form of error to the user\n  const [message, setMessage] = useState('');\n\n  //it updates the users values in case a change has been made \n  //used a spread operator to update the form by targeting .name and .value \n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validateInfo = form => {\n    let errors = {};\n    if (!form.username.trim()) {\n      errors.username = 'Username is required!';\n    }\n    if (!form.email) {\n      errors.email = 'Email is required!';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\n      errors.email = 'Email address is invalid';\n    }\n    if (!form.password) {\n      errors.password = 'Password is required';\n    } else if (form.password.length < 6) {\n      errors.password = 'Password must be at least 6 characters long!';\n    }\n    return errors;\n  };\n\n  //it is used when the form is submitted, sends message to the backend to either login or register\n  //if successful/denied  response is saved in message\n  const handleSubmit = e => {\n    e.preventDefault();\n    //  setErros(validateInfo(form));\n\n    const errors = validateInfo(form);\n    if (Object.keys(errors).length > 0) {\n      setMessage(errors.username || errors.password);\n      return;\n    }\n    if (mode === 'login') {\n      axios.post('http://localhost:4000/login', form).then(response => {\n        setMessage(response.data);\n      }).catch(error => {\n        setMessage(error.message);\n      });\n    } else {\n      axios.post('http://localhost:4000/register', form).then(response => {\n        setMessage(response.data);\n      }).catch(error => {\n        setMessage(error.message);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: form.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", errors.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }, this), mode === 'register' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: form.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", errors.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", errors.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: mode === 'login' ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setMode(mode === 'login' ? 'register' : 'login'),\n        children: [\"Switch to \", mode === 'login' ? 'Register' : 'Login']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(Login2, \"bGHUD9VP7vTeQIh6mvzrPgg779k=\");\n_c = Login2;\n;\n\n//ternary operator\n\nexport default Login2;\nvar _c;\n$RefreshReg$(_c, \"Login2\");","map":{"version":3,"names":["React","useState","axios","Login2","form","setForm","username","email","password","mode","setMode","message","setMessage","handleChange","e","target","name","value","validateInfo","errors","trim","test","length","handleSubmit","preventDefault","Object","keys","post","then","response","data","catch","error"],"sources":["E:/GitHub/CleanEnergyForBusiness/cleanenergyforbusiness/client/src/Components/Pages/Login2.js"],"sourcesContent":["import \"../CSSContents/newLog.css\";\r\nimport React, { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Login2() {\r\n\r\n    //Saving the values in the form variable\r\n    const [form, setForm] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n    //mode determines whether the form should disply login or register\r\n    const [mode, setMode] = useState('login');\r\n    //const [errors, setErros] = useState({});\r\n    //message is used to disply any form of error to the user\r\n    const [message, setMessage] = useState('');\r\n\r\n\r\n    //it updates the users values in case a change has been made \r\n    //used a spread operator to update the form by targeting .name and .value \r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const validateInfo = (form) => {\r\n        let errors = {};\r\n        if (!form.username.trim()) {\r\n            errors.username = 'Username is required!';\r\n        }\r\n        if (!form.email) {\r\n            errors.email = 'Email is required!';\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\r\n            errors.email = 'Email address is invalid';\r\n        }\r\n        if (!form.password) {\r\n            errors.password = 'Password is required';\r\n        } else if (form.password.length < 6) {\r\n            errors.password = 'Password must be at least 6 characters long!';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n\r\n\r\n    //it is used when the form is submitted, sends message to the backend to either login or register\r\n    //if successful/denied  response is saved in message\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //  setErros(validateInfo(form));\r\n\r\n        const errors = validateInfo(form);\r\n        if (Object.keys(errors).length > 0) {\r\n            setMessage(errors.username || errors.password);\r\n            return;\r\n        }\r\n\r\n\r\n        if (mode === 'login') {\r\n            axios.post('http://localhost:4000/login', form)\r\n                .then((response) => {\r\n                    setMessage(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    setMessage(error.message);\r\n                });\r\n        } else {\r\n            axios.post('http://localhost:4000/register', form)\r\n                .then((response) => {\r\n                    setMessage(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    setMessage(error.message);\r\n                });\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username\"\r\n                    value={form.username}\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.username && <p> {errors.username}</p>}\r\n                {mode === 'register' && (\r\n                    <>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={form.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.email && <p> {errors.email}</p>}\r\n                    </>\r\n                )}\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={form.password}\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.password && <p> {errors.password}</p>}\r\n\r\n                <button type=\"submit\">\r\n                    {mode === 'login' ? 'Login' : 'Register'}\r\n                </button>\r\n\r\n                <button type=\"button\" onClick={() => setMode(mode === 'login' ? 'register' : 'login')}>\r\n                    Switch to {mode === 'login' ? 'Register' : 'Login'}\r\n                </button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\n//ternary operator\r\n\r\nexport default Login2;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}