{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\CleanEnergyForBusiness\\\\cleanenergyforbusiness\\\\client\\\\src\\\\Components\\\\Pages\\\\Login2.js\",\n  _s = $RefreshSig$();\nimport \"../CSSContents/newLog.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login2() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    email: \"\"\n  });\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [isLogin, setIsLogin] = useState(true);\n  const handleChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (formData.username && formData.password && formData.email) {\n      setIsRegistered(true);\n    }\n  };\n  const handleLogin = () => {\n    setIsLogin(true);\n  };\n  const handleSignup = () => {\n    setIsLogin(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: isRegistered ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome \", formData.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `form-header-button ${isLogin ? \"active\" : \"\"}`,\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `form-header-button ${!isLogin ? \"active\" : \"\"}`,\n          onClick: handleSignup,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: isLogin ? \"Login\" : \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Login2, \"Ks8Pa/powR88Yg3BzfMoJf9ByC0=\");\n_c = Login2;\nexport default Login2;\n\n/*\r\n\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginStatus, setLoginStatus] = useState(\"\");\r\n    const [registerStatus, setRegisterStatus] = useState(\"\");\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/user\", {\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setRegisterStatus(response.data.message);\r\n            }\r\n            else {\r\n                setRegisterStatus(\"Account created successfully \");\r\n            }\r\n        })\r\n    }\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/login\", {\r\n            username: username,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setLoginStatus(response.data.message);\r\n            }\r\n            else {\r\n                //to return users username \r\n                setLoginStatus(response.data[0].username);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Login Here</h4>\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={login} value=\"Login\" />\r\n                    <h1 style={{ color: 'red', fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{loginStatus}</h1>\r\n                </form>\r\n            </div>\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Register Here</h4>\r\n                    <label htmlFor=\"email\">Email Address*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} placeholder=\"Enter your Email Address\" required />\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"username\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={register} value=\"Create an account\" />\r\n                    <h1 style={{ fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{registerStatus}</h1>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Login2\");","map":{"version":3,"names":["React","useState","Login2","formData","setFormData","username","password","email","isRegistered","setIsRegistered","isLogin","setIsLogin","handleChange","event","target","name","value","handleSubmit","preventDefault","handleLogin","handleSignup"],"sources":["E:/GitHub/CleanEnergyForBusiness/cleanenergyforbusiness/client/src/Components/Pages/Login2.js"],"sourcesContent":["import \"../CSSContents/newLog.css\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nfunction Login2() {\r\n    const [formData, setFormData] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n    });\r\n    const [isRegistered, setIsRegistered] = useState(false);\r\n    const [isLogin, setIsLogin] = useState(true);\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (formData.username && formData.password && formData.email) {\r\n            setIsRegistered(true);\r\n        }\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        setIsLogin(true);\r\n    };\r\n\r\n    const handleSignup = () => {\r\n        setIsLogin(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isRegistered ? (\r\n                <h1>Welcome {formData.username}</h1>\r\n            ) : (\r\n                <div className=\"form-container\">\r\n                    <div className=\"form-header\">\r\n                        <button className={`form-header-button ${isLogin ? \"active\" : \"\"}`} onClick={handleLogin}>\r\n                            Login\r\n                        </button>\r\n                        <button className={`form-header-button ${!isLogin ? \"active\" : \"\"}`} onClick={handleSignup}>\r\n                            Signup\r\n                        </button>\r\n                    </div>\r\n                    <form className=\"form\" onSubmit={handleSubmit}>\r\n                        {!isLogin && (\r\n                            <input\r\n                                className=\"input\"\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                placeholder=\"Email\"\r\n                            />\r\n                        )}\r\n                        <input\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={formData.username}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Username\"\r\n                        />\r\n                        <input\r\n                            className=\"input\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Password\"\r\n                        />\r\n                        <button className=\"button\" type=\"submit\">\r\n                            {isLogin ? \"Login\" : \"Signup\"}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Login2;\r\n\r\n/*\r\n\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginStatus, setLoginStatus] = useState(\"\");\r\n    const [registerStatus, setRegisterStatus] = useState(\"\");\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/user\", {\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setRegisterStatus(response.data.message);\r\n            }\r\n            else {\r\n                setRegisterStatus(\"Account created successfully \");\r\n            }\r\n        })\r\n    }\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/login\", {\r\n            username: username,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setLoginStatus(response.data.message);\r\n            }\r\n            else {\r\n                //to return users username \r\n                setLoginStatus(response.data[0].username);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Login Here</h4>\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={login} value=\"Login\" />\r\n                    <h1 style={{ color: 'red', fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{loginStatus}</h1>\r\n                </form>\r\n            </div>\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Register Here</h4>\r\n                    <label htmlFor=\"email\">Email Address*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} placeholder=\"Enter your Email Address\" required />\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"username\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={register} value=\"Create an account\" />\r\n                    <h1 style={{ fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{registerStatus}</h1>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}