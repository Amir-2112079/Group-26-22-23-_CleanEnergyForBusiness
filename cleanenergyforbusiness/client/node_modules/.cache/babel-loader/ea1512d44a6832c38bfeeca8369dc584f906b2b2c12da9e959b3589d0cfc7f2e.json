{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\CleanEnergyForBusiness\\\\cleanenergyforbusiness\\\\client\\\\src\\\\Components\\\\Pages\\\\LoginRegister.js\",\n  _s = $RefreshSig$();\nimport \"../CSSContents/LoginRegister.css\";\nimport LogoutBtn from \"./LogoutBtn\";\n\n//add useEffect to save users login\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginRegister() {\n  _s();\n  //Saving the values in the form variable\n  const [form, setForm] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  //mode determines whether the form should disply login or register\n  const [mode, setMode] = useState('login');\n  const [errors, setErrors] = useState({});\n  //message is used to disply any form of error to the user\n  const [message, setMessage] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //it updates the users values in case a change has been made \n  //used a spread operator to update the form by targeting .name and .value \n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validateInfo = form => {\n    let errors = {};\n    if (!form.username) {\n      errors.username = 'Username is required!';\n    }\n    if (!form.email) {\n      errors.email = 'Email is required!';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\n      errors.email = 'Email address is invalid';\n    }\n    if (!form.password) {\n      errors.password = 'Password is required!';\n    } else if (form.password.length < 6) {\n      errors.password = 'Password must be at least 6 characters long!';\n    }\n    return errors;\n  };\n\n  //it is used when the form is submitted, sends message to the backend to either login or register\n  //if successful/denied  response is saved in message\n  const handleSubmit = e => {\n    e.preventDefault();\n    const errors = validateInfo(form);\n    setErrors(errors);\n\n    //check to see if the password is grater than 6\n    if (form.password.length >= 6) {\n      if (mode === 'login') {\n        axios.post('http://localhost:4000/login', form).then(response => {\n          if (response.data === 'Logged in successfully') {\n            setMessage('Logged in successfully');\n            setIsLoggedIn(true);\n            localStorage.setItem('isLoggedIn', JSON.stringify(true));\n            localStorage.setItem('username', JSON.stringify(form.username));\n\n            //     window.location.href = '/';\n            //  localStorage.setItem('user', JSON.stringify(form));\n          } else {\n            setMessage('Login was unsuccessful, check your inputs!');\n          }\n        });\n      } else {\n        axios.get(`http://localhost:4000/checkUser/${form.username}`).then(response => {\n          if (response.data === 'User exists') {\n            setMessage('User already exists');\n            return;\n          } else {\n            axios.post('http://localhost:4000/register', form).then(response => {\n              setMessage(response.data);\n              setIsLoggedIn(true);\n              localStorage.setItem('isLoggedIn', JSON.stringify(true));\n              //  localStorage.setItem('user', JSON.stringify(form));\n            });\n          }\n        }).catch(error => {\n          setMessage(\"you must complete the form before submitting\");\n        });\n      }\n      setErrors(errors);\n    }\n  };\n  useEffect(() => {\n    const isLoggedIn = JSON.parse(localStorage.getItem('isLoggedIn'));\n    if (isLoggedIn) {\n      setIsLoggedIn(isLoggedIn);\n    }\n  }, []);\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn');\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          value: form.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: [\" \", errors.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 41\n        }, this), mode === 'register' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            value: form.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: [\" \", errors.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: form.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: [\" \", errors.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: mode === 'login' ? 'Login' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          onClick: () => setMode(mode === 'login' ? 'register' : 'login'),\n          children: [\"Switch to \", mode === 'login' ? 'Register' : 'Login']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginRegister, \"l5idJhuBlQu9tUKH78DOv6GNEO8=\");\n_c = LoginRegister;\n;\n\n//ternary operator\n\nexport default LoginRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"names":["LogoutBtn","React","useState","useEffect","axios","LoginRegister","form","setForm","username","email","password","mode","setMode","errors","setErrors","message","setMessage","isLoggedIn","setIsLoggedIn","handleChange","e","target","name","value","validateInfo","test","length","handleSubmit","preventDefault","post","then","response","data","localStorage","setItem","JSON","stringify","get","catch","error","parse","getItem","handleLogout","removeItem","window","location","href"],"sources":["E:/GitHub/CleanEnergyForBusiness/cleanenergyforbusiness/client/src/Components/Pages/LoginRegister.js"],"sourcesContent":["import \"../CSSContents/LoginRegister.css\";\r\nimport LogoutBtn from \"./LogoutBtn\";\r\n\r\n//add useEffect to save users login\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction LoginRegister() {\r\n\r\n    //Saving the values in the form variable\r\n    const [form, setForm] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n    //mode determines whether the form should disply login or register\r\n    const [mode, setMode] = useState('login');\r\n    const [errors, setErrors] = useState({});\r\n    //message is used to disply any form of error to the user\r\n    const [message, setMessage] = useState('');\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    //it updates the users values in case a change has been made \r\n    //used a spread operator to update the form by targeting .name and .value \r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const validateInfo = (form) => {\r\n        let errors = {};\r\n        if (!form.username) {\r\n            errors.username = 'Username is required!';\r\n        }\r\n        if (!form.email) {\r\n            errors.email = 'Email is required!';\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\r\n            errors.email = 'Email address is invalid';\r\n        }\r\n        if (!form.password) {\r\n            errors.password = 'Password is required!';\r\n        } else if (form.password.length < 6) {\r\n            errors.password = 'Password must be at least 6 characters long!';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n\r\n\r\n\r\n    //it is used when the form is submitted, sends message to the backend to either login or register\r\n    //if successful/denied  response is saved in message\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const errors = validateInfo(form)\r\n        setErrors(errors);\r\n\r\n        //check to see if the password is grater than 6\r\n        if (form.password.length >= 6) {\r\n\r\n            if (mode === 'login') {\r\n                axios.post('http://localhost:4000/login', form)\r\n                    .then((response) => {\r\n                        if (response.data === 'Logged in successfully') {\r\n                            setMessage('Logged in successfully');\r\n\r\n                            setIsLoggedIn(true);\r\n                            localStorage.setItem('isLoggedIn', JSON.stringify(true));\r\n                            localStorage.setItem('username', JSON.stringify(form.username));\r\n\r\n                            //     window.location.href = '/';\r\n                            //  localStorage.setItem('user', JSON.stringify(form));\r\n                        } else {\r\n                            setMessage('Login was unsuccessful, check your inputs!');\r\n                        }\r\n\r\n                    })\r\n\r\n            } else {\r\n                axios.get(`http://localhost:4000/checkUser/${form.username}`)\r\n                    .then((response) => {\r\n                        if (response.data === 'User exists') {\r\n                            setMessage('User already exists');\r\n                            return;\r\n                        } else {\r\n                            axios.post('http://localhost:4000/register', form)\r\n                                .then((response) => {\r\n                                    setMessage(response.data);\r\n                                    setIsLoggedIn(true);\r\n                                    localStorage.setItem('isLoggedIn', JSON.stringify(true));\r\n                                    //  localStorage.setItem('user', JSON.stringify(form));\r\n                                })\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        setMessage(\"you must complete the form before submitting\");\r\n                    });\r\n\r\n            }\r\n            setErrors(errors);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const isLoggedIn = JSON.parse(localStorage.getItem('isLoggedIn'));\r\n        if (isLoggedIn) {\r\n            setIsLoggedIn(isLoggedIn);\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    const handleLogout = () => {\r\n        setIsLoggedIn(false);\r\n        localStorage.removeItem('isLoggedIn');\r\n        window.location.href = '/';\r\n    };\r\n\r\n    return (\r\n        <div className=\"Form\">\r\n            <div className=\"background\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"Username\"\r\n                        value={form.username}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.username && <p className=\"error-message\" > {errors.username}</p>}\r\n                    {mode === 'register' && (\r\n                        <>\r\n                            <label>Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={form.email}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.email && <p className=\"error-message\" > {errors.email}</p>}\r\n                        </>\r\n                    )}\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={form.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.password && <p className=\"error-message\" > {errors.password}</p>}\r\n\r\n                    <button type=\"submit\" className='btn'>\r\n                        {mode === 'login' ? 'Login' : 'Register'}\r\n                    </button>\r\n\r\n                    <button type=\"button\" className='btn' onClick={() => setMode(mode === 'login' ? 'register' : 'login')}>\r\n                        Switch to {mode === 'login' ? 'Register' : 'Login'}\r\n                    </button>\r\n                </form>\r\n                {message && <p className=\"message\" >{message}</p>}\r\n            </div>\r\n            <div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n//ternary operator\r\n\r\nexport default LoginRegister;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}