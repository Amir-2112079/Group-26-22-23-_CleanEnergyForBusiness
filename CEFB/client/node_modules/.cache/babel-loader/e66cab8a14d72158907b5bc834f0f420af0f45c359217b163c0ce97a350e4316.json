{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\CleanEnergyForBusiness\\\\cleanenergyforbusiness\\\\client\\\\src\\\\Components\\\\Pages\\\\Login2.js\";\nimport \"../CSSContents/newLog.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login2() {\n  var _s = $RefreshSig$();\n  const Login = () => {\n    _s();\n    const [formData, setFormData] = useState({\n      username: \"\",\n      password: \"\"\n    });\n    const [isRegistered, setIsRegistered] = useState(false);\n    const handleChange = event => {\n      setFormData({\n        ...formData,\n        [event.target.name]: event.target.value\n      });\n    };\n    const handleSubmit = event => {\n      event.preventDefault();\n      if (formData.username && formData.password) {\n        setIsRegistered(true);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: isRegistered ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome \", formData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n  _s(Login, \"MjpJ7ZTxaqJaX17QeVg+MWKuhdc=\");\n}\n_c = Login2;\nexport default Login2;\n\n/*\r\n\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginStatus, setLoginStatus] = useState(\"\");\r\n    const [registerStatus, setRegisterStatus] = useState(\"\");\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/user\", {\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setRegisterStatus(response.data.message);\r\n            }\r\n            else {\r\n                setRegisterStatus(\"Account created successfully \");\r\n            }\r\n        })\r\n    }\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/login\", {\r\n            username: username,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setLoginStatus(response.data.message);\r\n            }\r\n            else {\r\n                //to return users username \r\n                setLoginStatus(response.data[0].username);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Login Here</h4>\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={login} value=\"Login\" />\r\n                    <h1 style={{ color: 'red', fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{loginStatus}</h1>\r\n                </form>\r\n            </div>\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Register Here</h4>\r\n                    <label htmlFor=\"email\">Email Address*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} placeholder=\"Enter your Email Address\" required />\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"username\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={register} value=\"Create an account\" />\r\n                    <h1 style={{ fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{registerStatus}</h1>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Login2\");","map":{"version":3,"names":["React","useState","Login2","Login","formData","setFormData","username","password","isRegistered","setIsRegistered","handleChange","event","target","name","value","handleSubmit","preventDefault"],"sources":["E:/GitHub/CleanEnergyForBusiness/cleanenergyforbusiness/client/src/Components/Pages/Login2.js"],"sourcesContent":["import \"../CSSContents/newLog.css\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nfunction Login2() {\r\n    const Login = () => {\r\n        const [formData, setFormData] = useState({\r\n            username: \"\",\r\n            password: \"\",\r\n        });\r\n        const [isRegistered, setIsRegistered] = useState(false);\r\n\r\n        const handleChange = (event) => {\r\n            setFormData({ ...formData, [event.target.name]: event.target.value });\r\n        };\r\n\r\n        const handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            if (formData.username && formData.password) {\r\n                setIsRegistered(true);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {isRegistered ? (\r\n                    <h1>Welcome {formData.username}</h1>\r\n                ) : (\r\n                    <form className=\"form\" onSubmit={handleSubmit}>\r\n                        <input\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={formData.username}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Username\"\r\n                        />\r\n                        <input\r\n                            className=\"input\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Password\"\r\n                        />\r\n                        <button className=\"button\" type=\"submit\">\r\n                            Submit\r\n                        </button>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login2;\r\n\r\n/*\r\n\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginStatus, setLoginStatus] = useState(\"\");\r\n    const [registerStatus, setRegisterStatus] = useState(\"\");\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/user\", {\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setRegisterStatus(response.data.message);\r\n            }\r\n            else {\r\n                setRegisterStatus(\"Account created successfully \");\r\n            }\r\n        })\r\n    }\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/login\", {\r\n            username: username,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setLoginStatus(response.data.message);\r\n            }\r\n            else {\r\n                //to return users username \r\n                setLoginStatus(response.data[0].username);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Login Here</h4>\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={login} value=\"Login\" />\r\n                    <h1 style={{ color: 'red', fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{loginStatus}</h1>\r\n                </form>\r\n            </div>\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Register Here</h4>\r\n                    <label htmlFor=\"email\">Email Address*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} placeholder=\"Enter your Email Address\" required />\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"username\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={register} value=\"Create an account\" />\r\n                    <h1 style={{ fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{registerStatus}</h1>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n*/"],"mappings":";AAAA,OAAO,2BAA2B;AAClC,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAGxC,SAASC,MAAM,GAAG;EAAA;EACd,MAAMC,KAAK,GAAG,MAAM;IAAA;IAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;MACrCK,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;IAEvD,MAAMS,YAAY,GAAIC,KAAK,IAAK;MAC5BN,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAE,CAACO,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;MAAM,CAAC,CAAC;IACzE,CAAC;IAED,MAAMC,YAAY,GAAIJ,KAAK,IAAK;MAC5BA,KAAK,CAACK,cAAc,EAAE;MACtB,IAAIZ,QAAQ,CAACE,QAAQ,IAAIF,QAAQ,CAACG,QAAQ,EAAE;QACxCE,eAAe,CAAC,IAAI,CAAC;MACzB;IACJ,CAAC;IAED,oBACI;MAAK,SAAS,EAAC,WAAW;MAAA,UACrBD,YAAY,gBACT;QAAA,WAAI,UAAQ,EAACJ,QAAQ,CAACE,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,gBAEpC;QAAM,SAAS,EAAC,MAAM;QAAC,QAAQ,EAAES,YAAa;QAAA,wBAC1C;UACI,SAAS,EAAC,OAAO;UACjB,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,UAAU;UACf,KAAK,EAAEX,QAAQ,CAACE,QAAS;UACzB,QAAQ,EAAEI,YAAa;UACvB,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QACxB,eACF;UACI,SAAS,EAAC,OAAO;UACjB,IAAI,EAAC,UAAU;UACf,IAAI,EAAC,UAAU;UACf,KAAK,EAAEN,QAAQ,CAACG,QAAS;UACzB,QAAQ,EAAEG,YAAa;UACvB,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QACxB,eACF;UAAQ,SAAS,EAAC,QAAQ;UAAC,IAAI,EAAC,QAAQ;UAAA,UAAC;QAEzC;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAEhB;MAAA;MAAA;MAAA;IAAA,QACC;EAEd,CAAC;EAAA,GA/CKP,KAAK;AAgDf;AAAC,KAjDQD,MAAM;AAmDf,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}