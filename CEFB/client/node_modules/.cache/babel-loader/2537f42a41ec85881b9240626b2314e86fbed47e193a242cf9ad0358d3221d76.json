{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\CleanEnergyForBusiness\\\\CEFB\\\\client\\\\src\\\\Components\\\\Pages\\\\Cart.js\";\nimport '../CSSContents/Cart.css';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cart(_ref) {\n  let {\n    items,\n    onProductRemove,\n    onClose,\n    onQuantityChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shoppingCart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn close-btn\",\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-products\",\n        children: [items.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"empty-text\",\n          children: \"Your basket is currently empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-product\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image,\n            alt: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"product-price\",\n              children: [\"\\xA3\", item.price * item.count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"count\",\n            value: item.count,\n            onChange: event => {\n              onQuantityChange(item.id, event.target.value);\n            },\n            children: [...Array(10).keys()].map(number => {\n              const num = number + 1;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: num,\n                children: num\n              }, num, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn remove-btn\",\n            onClick: () => onProductRemove(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)), items.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn checkout-btn\",\n          children: \"Proceed to checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Cart;\nexport default Cart;\n\n/*\r\n\r\n\r\nfunction Cart({\r\n    items,\r\n    onProductRemove,\r\n    onClose,\r\n    onQuantityChange, }) {\r\n\r\n    return (\r\n        <div\r\n            className=\"modal\">\r\n            <div className=\"shoppingCart\">\r\n                <div className=\"header\">\r\n                    <h2>Shopping cart</h2>\r\n                    <button\r\n                        className=\"btn close-btn\"\r\n                        onClick={onClose}>\r\n\r\n                    </button>\r\n                </div>\r\n                <div className=\"cart-products\">\r\n                    {items.length === 0 && (\r\n                        <span className=\"empty-text\">\r\n                            Your basket is\r\n                            currently empty\r\n                        </span>\r\n                    )}\r\n                    {items.map((item) => (\r\n                        <div\r\n                            className=\"cart-product\"\r\n                            key={item.id}>\r\n                            <img\r\n                                src={\r\n                                    item.image\r\n                                }\r\n                                alt={item.name}\r\n                            />\r\n                            <div className=\"product-info\">\r\n                                <h3>\r\n                                    {item.name}\r\n                                </h3>\r\n                                <span className=\"product-price\">\r\n                                    Â£{item.price *\r\n                                        item.count}\r\n\r\n                                </span>\r\n                            </div>\r\n                            <select\r\n                                className=\"count\"\r\n                                value={\r\n                                    item.count\r\n                                }\r\n                                onChange={(\r\n                                    event\r\n                                ) => {\r\n                                    onQuantityChange(\r\n                                        item.id,\r\n                                        event\r\n                                            .target\r\n                                            .value\r\n                                    );\r\n                                }}>\r\n                                {[\r\n                                    ...Array(\r\n                                        10\r\n                                    ).keys(),\r\n                                ].map(\r\n                                    (number) => {\r\n                                        const num =\r\n                                            number +\r\n                                            1;\r\n                                        return (\r\n                                            <option\r\n                                                value={\r\n                                                    num\r\n                                                }\r\n                                                key={\r\n                                                    num\r\n                                                }>\r\n                                                {\r\n                                                    num\r\n                                                }\r\n                                            </option>\r\n                                        );\r\n                                    }\r\n                                )}\r\n                            </select>\r\n                            <button\r\n                                className=\"btn remove-btn\"\r\n                                onClick={() =>\r\n                                    onProductRemove(\r\n                                        item\r\n                                    )\r\n                                }>\r\n\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                    {items.length > 0 && (\r\n                        <button className=\"btn checkout-btn\">\r\n                            Proceed to checkout\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Cart;\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","Cart","items","onProductRemove","onClose","onQuantityChange","length","map","item","image","name","price","count","event","id","target","value","Array","keys","number","num"],"sources":["E:/GitHub/CleanEnergyForBusiness/CEFB/client/src/Components/Pages/Cart.js"],"sourcesContent":["import '../CSSContents/Cart.css'\r\n\r\n\r\nimport React from \"react\";\r\n\r\nfunction Cart({ items, onProductRemove, onClose, onQuantityChange }) {\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"shoppingCart\">\r\n                <div className=\"header\">\r\n                    <h2>Shopping cart</h2>\r\n                    <button className=\"btn close-btn\" onClick={onClose}></button>\r\n                </div>\r\n                <div className=\"cart-products\">\r\n                    {items.length === 0 && (\r\n                        <span className=\"empty-text\">\r\n                            Your basket is currently empty\r\n                        </span>\r\n                    )}\r\n                    {items.map((item) => (\r\n                        <div className=\"cart-product\" key={item.id}>\r\n                            <img src={item.image} alt={item.name} />\r\n                            <div className=\"product-info\">\r\n                                <h3>{item.name}</h3>\r\n                                <span className=\"product-price\">\r\n                                    Â£{item.price * item.count}\r\n                                </span>\r\n                            </div>\r\n                            <select\r\n                                className=\"count\"\r\n                                value={item.count}\r\n                                onChange={(event) => {\r\n                                    onQuantityChange(item.id, event.target.value);\r\n                                }}\r\n                            >\r\n                                {[...Array(10).keys()].map((number) => {\r\n                                    const num = number + 1;\r\n                                    return (\r\n                                        <option value={num} key={num}>\r\n                                            {num}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n                            <button\r\n                                className=\"btn remove-btn\"\r\n                                onClick={() => onProductRemove(item)}\r\n                            ></button>\r\n                        </div>\r\n                    ))}\r\n                    {items.length > 0 && (\r\n                        <button className=\"btn checkout-btn\">\r\n                            Proceed to checkout\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nfunction Cart({\r\n    items,\r\n    onProductRemove,\r\n    onClose,\r\n    onQuantityChange, }) {\r\n\r\n    return (\r\n        <div\r\n            className=\"modal\">\r\n            <div className=\"shoppingCart\">\r\n                <div className=\"header\">\r\n                    <h2>Shopping cart</h2>\r\n                    <button\r\n                        className=\"btn close-btn\"\r\n                        onClick={onClose}>\r\n\r\n                    </button>\r\n                </div>\r\n                <div className=\"cart-products\">\r\n                    {items.length === 0 && (\r\n                        <span className=\"empty-text\">\r\n                            Your basket is\r\n                            currently empty\r\n                        </span>\r\n                    )}\r\n                    {items.map((item) => (\r\n                        <div\r\n                            className=\"cart-product\"\r\n                            key={item.id}>\r\n                            <img\r\n                                src={\r\n                                    item.image\r\n                                }\r\n                                alt={item.name}\r\n                            />\r\n                            <div className=\"product-info\">\r\n                                <h3>\r\n                                    {item.name}\r\n                                </h3>\r\n                                <span className=\"product-price\">\r\n                                    Â£{item.price *\r\n                                        item.count}\r\n\r\n                                </span>\r\n                            </div>\r\n                            <select\r\n                                className=\"count\"\r\n                                value={\r\n                                    item.count\r\n                                }\r\n                                onChange={(\r\n                                    event\r\n                                ) => {\r\n                                    onQuantityChange(\r\n                                        item.id,\r\n                                        event\r\n                                            .target\r\n                                            .value\r\n                                    );\r\n                                }}>\r\n                                {[\r\n                                    ...Array(\r\n                                        10\r\n                                    ).keys(),\r\n                                ].map(\r\n                                    (number) => {\r\n                                        const num =\r\n                                            number +\r\n                                            1;\r\n                                        return (\r\n                                            <option\r\n                                                value={\r\n                                                    num\r\n                                                }\r\n                                                key={\r\n                                                    num\r\n                                                }>\r\n                                                {\r\n                                                    num\r\n                                                }\r\n                                            </option>\r\n                                        );\r\n                                    }\r\n                                )}\r\n                            </select>\r\n                            <button\r\n                                className=\"btn remove-btn\"\r\n                                onClick={() =>\r\n                                    onProductRemove(\r\n                                        item\r\n                                    )\r\n                                }>\r\n\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                    {items.length > 0 && (\r\n                        <button className=\"btn checkout-btn\">\r\n                            Proceed to checkout\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Cart;\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAO,yBAAyB;AAGhC,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,IAAI,OAAwD;EAAA,IAAvD;IAAEC,KAAK;IAAEC,eAAe;IAAEC,OAAO;IAAEC;EAAiB,CAAC;EAC/D,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,uBAClB;MAAK,SAAS,EAAC,cAAc;MAAA,wBACzB;QAAK,SAAS,EAAC,QAAQ;QAAA,wBACnB;UAAA,UAAI;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK,eACtB;UAAQ,SAAS,EAAC,eAAe;UAAC,OAAO,EAAED;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAU;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3D,eACN;QAAK,SAAS,EAAC,eAAe;QAAA,WACzBF,KAAK,CAACI,MAAM,KAAK,CAAC,iBACf;UAAM,SAAS,EAAC,YAAY;UAAA,UAAC;QAE7B;UAAA;UAAA;UAAA;QAAA,QACH,EACAJ,KAAK,CAACK,GAAG,CAAEC,IAAI,iBACZ;UAAK,SAAS,EAAC,cAAc;UAAA,wBACzB;YAAK,GAAG,EAAEA,IAAI,CAACC,KAAM;YAAC,GAAG,EAAED,IAAI,CAACE;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG,eACxC;YAAK,SAAS,EAAC,cAAc;YAAA,wBACzB;cAAA,UAAKF,IAAI,CAACE;YAAI;cAAA;cAAA;cAAA;YAAA,QAAM,eACpB;cAAM,SAAS,EAAC,eAAe;cAAA,WAAC,MAC3B,EAACF,IAAI,CAACG,KAAK,GAAGH,IAAI,CAACI,KAAK;YAAA;cAAA;cAAA;cAAA;YAAA,QACtB;UAAA;YAAA;YAAA;YAAA;UAAA,QACL,eACN;YACI,SAAS,EAAC,OAAO;YACjB,KAAK,EAAEJ,IAAI,CAACI,KAAM;YAClB,QAAQ,EAAGC,KAAK,IAAK;cACjBR,gBAAgB,CAACG,IAAI,CAACM,EAAE,EAAED,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;YACjD,CAAE;YAAA,UAED,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC,CAACX,GAAG,CAAEY,MAAM,IAAK;cACnC,MAAMC,GAAG,GAAGD,MAAM,GAAG,CAAC;cACtB,oBACI;gBAAQ,KAAK,EAAEC,GAAI;gBAAA,UACdA;cAAG,GADiBA,GAAG;gBAAA;gBAAA;gBAAA;cAAA,QAEnB;YAEjB,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QACG,eACT;YACI,SAAS,EAAC,gBAAgB;YAC1B,OAAO,EAAE,MAAMjB,eAAe,CAACK,IAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QAC/B;QAAA,GA3BqBA,IAAI,CAACM,EAAE;UAAA;UAAA;UAAA;QAAA,QA6B7C,CAAC,EACDZ,KAAK,CAACI,MAAM,GAAG,CAAC,iBACb;UAAQ,SAAS,EAAC,kBAAkB;UAAA,UAAC;QAErC;UAAA;UAAA;UAAA;QAAA,QACH;MAAA;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,KAtDQL,IAAI;AAwDb,eAAeA,IAAI;;AAQnnHA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}