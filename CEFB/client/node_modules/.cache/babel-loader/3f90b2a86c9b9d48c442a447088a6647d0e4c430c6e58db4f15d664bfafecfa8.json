{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\CleanEnergyForBusiness\\\\cleanenergyforbusiness\\\\client\\\\src\\\\Components\\\\Pages\\\\Login2.js\",\n  _s = $RefreshSig$();\nimport \"../CSSContents/newLog.css\";\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login2() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    email: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleRegister = event => {\n    event.preventDefault();\n    axios.post(\"http://localhost:3000/register\", formData).then(response => {\n      setSuccess(response.data.message);\n    }).catch(error => {\n      setError(error.response.data.error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Login2, \"GPM1YskXtPUQqxye9ouje1GpNDo=\");\n_c = Login2;\n;\nexport default Login2;\n\n/*\r\n\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginStatus, setLoginStatus] = useState(\"\");\r\n    const [registerStatus, setRegisterStatus] = useState(\"\");\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/user\", {\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setRegisterStatus(response.data.message);\r\n            }\r\n            else {\r\n                setRegisterStatus(\"Account created successfully \");\r\n            }\r\n        })\r\n    }\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/login\", {\r\n            username: username,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setLoginStatus(response.data.message);\r\n            }\r\n            else {\r\n                //to return users username \r\n                setLoginStatus(response.data[0].username);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Login Here</h4>\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={login} value=\"Login\" />\r\n                    <h1 style={{ color: 'red', fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{loginStatus}</h1>\r\n                </form>\r\n            </div>\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Register Here</h4>\r\n                    <label htmlFor=\"email\">Email Address*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} placeholder=\"Enter your Email Address\" required />\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"username\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={register} value=\"Create an account\" />\r\n                    <h1 style={{ fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{registerStatus}</h1>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Login2\");","map":{"version":3,"names":["React","useState","axios","Login2","formData","setFormData","username","password","email","error","setError","success","setSuccess","handleChange","event","target","name","value","handleRegister","preventDefault","post","then","response","data","message","catch","color"],"sources":["E:/GitHub/CleanEnergyForBusiness/cleanenergyforbusiness/client/src/Components/Pages/Login2.js"],"sourcesContent":["import \"../CSSContents/newLog.css\";\r\nimport React, { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Login2() {\r\n    const [formData, setFormData] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n    });\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleRegister = (event) => {\r\n        event.preventDefault();\r\n        axios\r\n            .post(\"http://localhost:3000/register\", formData)\r\n            .then((response) => {\r\n                setSuccess(response.data.message);\r\n            })\r\n            .catch((error) => {\r\n                setError(error.response.data.error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={formData.username}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={handleRegister}>Register</button>\r\n            </form>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Login2;\r\n\r\n/*\r\n\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loginStatus, setLoginStatus] = useState(\"\");\r\n    const [registerStatus, setRegisterStatus] = useState(\"\");\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/user\", {\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setRegisterStatus(response.data.message);\r\n            }\r\n            else {\r\n                setRegisterStatus(\"Account created successfully \");\r\n            }\r\n        })\r\n    }\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        Axios.post(\"http://localhost:3000/Login2/login\", {\r\n            username: username,\r\n            password: password,\r\n        }).then((response) => {\r\n            //if theres an error \r\n            if (response.data.message) {\r\n                setLoginStatus(response.data.message);\r\n            }\r\n            else {\r\n                //to return users username \r\n                setLoginStatus(response.data[0].username);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Login Here</h4>\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={login} value=\"Login\" />\r\n                    <h1 style={{ color: 'red', fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{loginStatus}</h1>\r\n                </form>\r\n            </div>\r\n            <div className=\"loginForm\">\r\n                <form>\r\n                    <h4>Register Here</h4>\r\n                    <label htmlFor=\"email\">Email Address*</label>\r\n                    <input className=\"textInput\" type=\"text\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} placeholder=\"Enter your Email Address\" required />\r\n                    <label htmlFor=\"username\">Username*</label>\r\n                    <input className=\"textInput\" type=\"username\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} placeholder=\"Enter your Username\" required />\r\n                    <label htmlFor=\"password\">Password*</label>\r\n                    <input className=\"textInput\" type=\"password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} placeholder=\"Enter your Password\" required />\r\n                    <input className=\"button\" type=\"submit\" onClick={register} value=\"Create an account\" />\r\n                    <h1 style={{ fontSize: '15px', textAlign: 'center', marginTop: '20px' }}>{registerStatus}</h1>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n*/"],"mappings":";;AAAA,OAAO,2BAA2B;AAClC,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAG1B,SAASC,MAAM,GAAG;EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IACrCK,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC5BT,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAACU,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACtC,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,cAAc,GAAIJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,EAAE;IACtBjB,KAAK,CACAkB,IAAI,CAAC,gCAAgC,EAAEhB,QAAQ,CAAC,CAChDiB,IAAI,CAAEC,QAAQ,IAAK;MAChBV,UAAU,CAACU,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAAEhB,KAAK,IAAK;MACdC,QAAQ,CAACD,KAAK,CAACa,QAAQ,CAACC,IAAI,CAACd,KAAK,CAAC;IACvC,CAAC,CAAC;EACV,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,wBACI;QACI,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,UAAU;QACf,KAAK,EAAEL,QAAQ,CAACE,QAAS;QACzB,QAAQ,EAAEO;MAAa;QAAA;QAAA;QAAA;MAAA,QACzB,eACF;QACI,IAAI,EAAC,UAAU;QACf,IAAI,EAAC,UAAU;QACf,KAAK,EAAET,QAAQ,CAACG,QAAS;QACzB,QAAQ,EAAEM;MAAa;QAAA;QAAA;QAAA;MAAA,QACzB,eACF;QACI,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,OAAO;QACZ,KAAK,EAAET,QAAQ,CAACI,KAAM;QACtB,QAAQ,EAAEK;MAAa;QAAA;QAAA;QAAA;MAAA,QACzB,eACF;QAAQ,OAAO,EAAEK,cAAe;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/C,EACNT,KAAK,iBAAI;MAAG,KAAK,EAAE;QAAEiB,KAAK,EAAE;MAAM,CAAE;MAAA,UAAEjB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,EAChDE,OAAO,iBAAI;MAAG,KAAK,EAAE;QAAEe,KAAK,EAAE;MAAQ,CAAE;MAAA,UAAEf;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACrD;AAEd;AAAC,GAvDQR,MAAM;AAAA,KAANA,MAAM;AAuDd;AAGD,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}