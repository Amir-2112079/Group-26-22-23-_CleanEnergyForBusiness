{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\CleanEnergyForBusiness\\\\CEFB\\\\client\\\\src\\\\Components\\\\Pages\\\\Cart.js\";\nimport '../CSSContents/Cart.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cart(_ref) {\n  let {\n    cartItems,\n    handleRemoveFromCart\n  } = _ref;\n  const totalPrice = cartItems.reduce((acc, item) => acc + item.price, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveFromCart(item.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $\", totalPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Cart;\nexport default Cart;\n\n//guy from youtube improvised\n/*\r\nfunction Cart({ items, onProductRemove, onClose, onQuantityChange }) {\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"shoppingCart\">\r\n                <div className=\"header\">\r\n                    <h2>Shopping cart</h2>\r\n                    <button className=\"btn close-btn\" onClick={onClose}></button>\r\n                </div>\r\n                <div className=\"cart-products\">\r\n                    {items.length === 0 && (\r\n                        <span className=\"empty-text\">\r\n                            Your basket is currently empty\r\n                        </span>\r\n                    )}\r\n                    {items.map((item) => (\r\n                        <div className=\"cart-product\" key={item.id}>\r\n                            <img src={item.image} alt={item.name} />\r\n                            <div className=\"product-info\">\r\n                                <h3>{item.name}</h3>\r\n                                <span className=\"product-price\">\r\n                                    £{item.price * item.count}\r\n                                </span>\r\n                            </div>\r\n                            <select\r\n                                className=\"count\"\r\n                                value={item.count}\r\n                                onChange={(event) => {\r\n                                    onQuantityChange(item.id, event.target.value);\r\n                                }}\r\n                            >\r\n                                {[...Array(10).keys()].map((number) => {\r\n                                    const num = number + 1;\r\n                                    return (\r\n                                        <option value={num} key={num}>\r\n                                            {num}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n                            <button\r\n                                className=\"btn remove-btn\"\r\n                                onClick={() => onProductRemove(item)}\r\n                            ></button>\r\n                        </div>\r\n                    ))}\r\n                    {items.length > 0 && (\r\n                        <button className=\"btn checkout-btn\">\r\n                            Proceed to checkout\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n\r\n*/\n\n//guy from youtube \n\n/*\r\n\r\n\r\nfunction Cart({\r\n    items,\r\n    onProductRemove,\r\n    onClose,\r\n    onQuantityChange, }) {\r\n\r\n    return (\r\n        <div\r\n            className=\"modal\">\r\n            <div className=\"shoppingCart\">\r\n                <div className=\"header\">\r\n                    <h2>Shopping cart</h2>\r\n                    <button\r\n                        className=\"btn close-btn\"\r\n                        onClick={onClose}>\r\n\r\n                    </button>\r\n                </div>\r\n                <div className=\"cart-products\">\r\n                    {items.length === 0 && (\r\n                        <span className=\"empty-text\">\r\n                            Your basket is\r\n                            currently empty\r\n                        </span>\r\n                    )}\r\n                    {items.map((item) => (\r\n                        <div\r\n                            className=\"cart-product\"\r\n                            key={item.id}>\r\n                            <img\r\n                                src={\r\n                                    item.image\r\n                                }\r\n                                alt={item.name}\r\n                            />\r\n                            <div className=\"product-info\">\r\n                                <h3>\r\n                                    {item.name}\r\n                                </h3>\r\n                                <span className=\"product-price\">\r\n                                    £{item.price *\r\n                                        item.count}\r\n\r\n                                </span>\r\n                            </div>\r\n                            <select\r\n                                className=\"count\"\r\n                                value={\r\n                                    item.count\r\n                                }\r\n                                onChange={(\r\n                                    event\r\n                                ) => {\r\n                                    onQuantityChange(\r\n                                        item.id,\r\n                                        event\r\n                                            .target\r\n                                            .value\r\n                                    );\r\n                                }}>\r\n                                {[\r\n                                    ...Array(\r\n                                        10\r\n                                    ).keys(),\r\n                                ].map(\r\n                                    (number) => {\r\n                                        const num =\r\n                                            number +\r\n                                            1;\r\n                                        return (\r\n                                            <option\r\n                                                value={\r\n                                                    num\r\n                                                }\r\n                                                key={\r\n                                                    num\r\n                                                }>\r\n                                                {\r\n                                                    num\r\n                                                }\r\n                                            </option>\r\n                                        );\r\n                                    }\r\n                                )}\r\n                            </select>\r\n                            <button\r\n                                className=\"btn remove-btn\"\r\n                                onClick={() =>\r\n                                    onProductRemove(\r\n                                        item\r\n                                    )\r\n                                }>\r\n\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                    {items.length > 0 && (\r\n                        <button className=\"btn checkout-btn\">\r\n                            Proceed to checkout\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Cart;\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","Cart","cartItems","handleRemoveFromCart","totalPrice","reduce","acc","item","price","length","map","image","name","id"],"sources":["E:/GitHub/CleanEnergyForBusiness/CEFB/client/src/Components/Pages/Cart.js"],"sourcesContent":["import '../CSSContents/Cart.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction Cart({ cartItems, handleRemoveFromCart }) {\r\n    const totalPrice = cartItems.reduce((acc, item) => acc + item.price, 0);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Cart</h2>\r\n            {cartItems.length === 0 ? (\r\n                <p>Your cart is empty.</p>\r\n            ) : (\r\n                <ul>\r\n                    {cartItems.map((item) => (\r\n                        <li key={item.id}>\r\n                            <img src={item.image} alt={item.name} />\r\n                            <h3>{item.name}</h3>\r\n                            <p>${item.price}</p>\r\n                            <button onClick={() => handleRemoveFromCart(item.id)}>Remove</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            {cartItems.length > 0 && (\r\n                <div>\r\n                    <p>Total: ${totalPrice}</p>\r\n                    <button>Checkout</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Cart;\r\n\r\n\r\n\r\n//guy from youtube improvised\r\n/*\r\nfunction Cart({ items, onProductRemove, onClose, onQuantityChange }) {\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"shoppingCart\">\r\n                <div className=\"header\">\r\n                    <h2>Shopping cart</h2>\r\n                    <button className=\"btn close-btn\" onClick={onClose}></button>\r\n                </div>\r\n                <div className=\"cart-products\">\r\n                    {items.length === 0 && (\r\n                        <span className=\"empty-text\">\r\n                            Your basket is currently empty\r\n                        </span>\r\n                    )}\r\n                    {items.map((item) => (\r\n                        <div className=\"cart-product\" key={item.id}>\r\n                            <img src={item.image} alt={item.name} />\r\n                            <div className=\"product-info\">\r\n                                <h3>{item.name}</h3>\r\n                                <span className=\"product-price\">\r\n                                    £{item.price * item.count}\r\n                                </span>\r\n                            </div>\r\n                            <select\r\n                                className=\"count\"\r\n                                value={item.count}\r\n                                onChange={(event) => {\r\n                                    onQuantityChange(item.id, event.target.value);\r\n                                }}\r\n                            >\r\n                                {[...Array(10).keys()].map((number) => {\r\n                                    const num = number + 1;\r\n                                    return (\r\n                                        <option value={num} key={num}>\r\n                                            {num}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n                            <button\r\n                                className=\"btn remove-btn\"\r\n                                onClick={() => onProductRemove(item)}\r\n                            ></button>\r\n                        </div>\r\n                    ))}\r\n                    {items.length > 0 && (\r\n                        <button className=\"btn checkout-btn\">\r\n                            Proceed to checkout\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//guy from youtube \r\n\r\n/*\r\n\r\n\r\nfunction Cart({\r\n    items,\r\n    onProductRemove,\r\n    onClose,\r\n    onQuantityChange, }) {\r\n\r\n    return (\r\n        <div\r\n            className=\"modal\">\r\n            <div className=\"shoppingCart\">\r\n                <div className=\"header\">\r\n                    <h2>Shopping cart</h2>\r\n                    <button\r\n                        className=\"btn close-btn\"\r\n                        onClick={onClose}>\r\n\r\n                    </button>\r\n                </div>\r\n                <div className=\"cart-products\">\r\n                    {items.length === 0 && (\r\n                        <span className=\"empty-text\">\r\n                            Your basket is\r\n                            currently empty\r\n                        </span>\r\n                    )}\r\n                    {items.map((item) => (\r\n                        <div\r\n                            className=\"cart-product\"\r\n                            key={item.id}>\r\n                            <img\r\n                                src={\r\n                                    item.image\r\n                                }\r\n                                alt={item.name}\r\n                            />\r\n                            <div className=\"product-info\">\r\n                                <h3>\r\n                                    {item.name}\r\n                                </h3>\r\n                                <span className=\"product-price\">\r\n                                    £{item.price *\r\n                                        item.count}\r\n\r\n                                </span>\r\n                            </div>\r\n                            <select\r\n                                className=\"count\"\r\n                                value={\r\n                                    item.count\r\n                                }\r\n                                onChange={(\r\n                                    event\r\n                                ) => {\r\n                                    onQuantityChange(\r\n                                        item.id,\r\n                                        event\r\n                                            .target\r\n                                            .value\r\n                                    );\r\n                                }}>\r\n                                {[\r\n                                    ...Array(\r\n                                        10\r\n                                    ).keys(),\r\n                                ].map(\r\n                                    (number) => {\r\n                                        const num =\r\n                                            number +\r\n                                            1;\r\n                                        return (\r\n                                            <option\r\n                                                value={\r\n                                                    num\r\n                                                }\r\n                                                key={\r\n                                                    num\r\n                                                }>\r\n                                                {\r\n                                                    num\r\n                                                }\r\n                                            </option>\r\n                                        );\r\n                                    }\r\n                                )}\r\n                            </select>\r\n                            <button\r\n                                className=\"btn remove-btn\"\r\n                                onClick={() =>\r\n                                    onProductRemove(\r\n                                        item\r\n                                    )\r\n                                }>\r\n\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                    {items.length > 0 && (\r\n                        <button className=\"btn checkout-btn\">\r\n                            Proceed to checkout\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default Cart;\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAO,yBAAyB;AAChC,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,SAASC,IAAI,OAAsC;EAAA,IAArC;IAAEC,SAAS;IAAEC;EAAqB,CAAC;EAC7C,MAAMC,UAAU,GAAGF,SAAS,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;EAEvE,oBACI;IAAA,wBACI;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,EACjBN,SAAS,CAACO,MAAM,KAAK,CAAC,gBACnB;MAAA,UAAG;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAI,gBAE1B;MAAA,UACKP,SAAS,CAACQ,GAAG,CAAEH,IAAI,iBAChB;QAAA,wBACI;UAAK,GAAG,EAAEA,IAAI,CAACI,KAAM;UAAC,GAAG,EAAEJ,IAAI,CAACK;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eACxC;UAAA,UAAKL,IAAI,CAACK;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACpB;UAAA,WAAG,GAAC,EAACL,IAAI,CAACC,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACpB;UAAQ,OAAO,EAAE,MAAML,oBAAoB,CAACI,IAAI,CAACM,EAAE,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GAJhEN,IAAI,CAACM,EAAE;QAAA;QAAA;QAAA;MAAA,QAMnB;IAAC;MAAA;MAAA;MAAA;IAAA,QAET,EACAX,SAAS,CAACO,MAAM,GAAG,CAAC,iBACjB;MAAA,wBACI;QAAA,WAAG,UAAQ,EAACL,UAAU;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B;QAAA,UAAQ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhC;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAGd;AAAC,KA7BQH,IAAI;AA+Bb,eAAeA,IAAI;;AAInnHA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}