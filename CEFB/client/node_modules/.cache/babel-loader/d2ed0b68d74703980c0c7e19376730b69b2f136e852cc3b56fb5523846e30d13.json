{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\CleanEnergyForBusiness\\\\cleanenergyforbusiness\\\\src\\\\Components\\\\Pages\\\\SignUp.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport '../CSSContents/signup,login.css';\nimport '../CSSContents/SignUp.css';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  } = useForm(validateInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SignUp now using the form below!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-lable\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"username\",\n          name: \"username\",\n          className: \"form-input\",\n          placeholder: \"Enter your Username\",\n          value: values.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), \"//allows you to show the erros\", errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", errors.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-lable\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          className: \"form-input\",\n          placeholder: \"Enter your email\",\n          value: values.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-lable\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          className: \"form-input\",\n          placeholder: \"Enter your Password\",\n          value: values.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-input-btn\",\n        type: \"submit\",\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"form-input-login\",\n        children: [\" Already have an account? Login\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Login\",\n          children: \" Here \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n///Handling the values\n\n//gets the values for each field,,, possibly uses this to add the values to a DB\n_s(SignUp, \"SZbpiBq+toIgrMG0v31t1WrzLQI=\", false, function () {\n  return [useForm];\n});\n_c = SignUp;\nconst useForm = validateInfo => {\n  _s2();\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  //uses for the error handling \n  const [errors, setErros] = useState({});\n\n  //when something changes it updates the value \n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  //handling the submit, prevents the page from refreshing as well asshowing the erros\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErros(validateInfo(values));\n  };\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n///Validation Part\n_s2(useForm, \"lLddXxlqS7fuFmo72AOOJFfssVk=\");\nfunction validateInfo(values) {\n  let errors = {};\n  //username used ,,,,,trim to eliminate the white spaces\n  if (!values.username.trim()) {\n    errors.username = 'Users name is required!';\n  }\n  //email\n  if (!values.email) {\n    errors.email = 'Email is required!';\n  } else if (/^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i.test(values.email)) {\n    errors.email = 'Email address is invalid';\n  }\n  if (!values.password) {\n    errors.password = 'Password is required';\n  } else if (values.password.length < 6) {\n    errors.password = 'Password needs to be at least 6 character long!';\n  }\n  return errors;\n}\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["Link","useState","useEffect","SignUp","handleChange","values","handleSubmit","errors","useForm","validateInfo","username","email","password","setValues","setErros","e","name","value","target","preventDefault","trim","test","length"],"sources":["E:/GitHub/CleanEnergyForBusiness/cleanenergyforbusiness/src/Components/Pages/SignUp.js"],"sourcesContent":["import '../CSSContents/signup,login.css'\r\nimport '../CSSContents/SignUp.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction SignUp() {\r\n    const { handleChange, values, handleSubmit, errors } = useForm(validateInfo);\r\n\r\n\r\n    return (\r\n        <div className='form-content'>\r\n            <form className='form' onSubmit={handleSubmit}>\r\n                <h1>SignUp now using the form below!</h1>\r\n                <div className='form-inputs'>\r\n                    <label className='form-lable'>\r\n                        Username\r\n                    </label>\r\n                    <input\r\n                        type='username'\r\n                        name='username'\r\n                        className='form-input'\r\n                        placeholder='Enter your Username'\r\n                        value={values.username}\r\n                        onChange={handleChange}\r\n                    />\r\n                    //allows you to show the erros\r\n                    {errors.username && <p> {errors.username}</p>}\r\n                </div>\r\n                <div className='form-inputs'>\r\n                    <label className='form-lable'>\r\n                        Email\r\n                    </label>\r\n                    <input\r\n                        type='email'\r\n                        name='email'\r\n                        className='form-input'\r\n                        placeholder='Enter your email'\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className='form-inputs'>\r\n                    <label className='form-lable'>\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        type='password'\r\n                        name='password'\r\n                        className='form-input'\r\n                        placeholder='Enter your Password'\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <button className='form-input-btn'\r\n                    type='submit'>SignUp\r\n                </button>\r\n                <span className='form-input-login'> Already have an account? Login\r\n                    <Link to='/Login'> Here </Link>\r\n\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n///Handling the values\r\n\r\n//gets the values for each field,,, possibly uses this to add the values to a DB\r\nconst useForm = (validateInfo) => {\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n    //uses for the error handling \r\n    const [errors, setErros] = useState({});\r\n\r\n    //when something changes it updates the value \r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    };\r\n    //handling the submit, prevents the page from refreshing as well asshowing the erros\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErros(validateInfo(values));\r\n    };\r\n\r\n    return { handleChange, values, handleSubmit, errors };\r\n};\r\n\r\n\r\n///Validation Part\r\n\r\nfunction validateInfo(values) {\r\n    let errors = {}\r\n    //username used ,,,,,trim to eliminate the white spaces\r\n    if (!values.username.trim()) {\r\n        errors.username = 'Users name is required!'\r\n    }\r\n    //email\r\n    if (!values.email) {\r\n        errors.email = 'Email is required!'\r\n    }\r\n    else if (/^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i.test(values.email)) {\r\n        errors.email = 'Email address is invalid';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Password is required'\r\n    }\r\n    else if (values.password.length < 6) {\r\n        errors.password = 'Password needs to be at least 6 character long!'\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default SignUp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}